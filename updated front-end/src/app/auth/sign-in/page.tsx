/* eslint-disable no-console */
/* eslint-disable jsx-a11y/alt-text */
/* eslint-disable @next/next/no-img-element */
/**
 * This code was generated by Builder.io.
 */
'use client';
import {
  SismoConnectButton,
  SismoConnectResponse,
} from '@sismo-core/sismo-connect-react';
import { useWeb3Modal } from '@web3modal/wagmi/react';
import clsx from 'clsx';
import { Modal, Spinner } from 'flowbite-react';
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import { signIn, useSession } from 'next-auth/react';
import * as React from 'react';
import { useEffect } from 'react';
import { Autoplay, Pagination } from 'swiper/modules';
import type { SwiperRef } from 'swiper/react';
import { Swiper, SwiperSlide } from 'swiper/react';
import { useAccount } from 'wagmi';

import PolygonIDVerifier from '@/containers/PolygonIDVerifier';

import { usePolygonIdLoginStore } from '@/store/polygonIdLogin';

import {
  AUTHS,
  CLAIMS,
  CONFIG,
  SIGNATURE_REQUEST,
} from '@/configs/sismo-connect-config';

const swiperContents = [
  'Elevate AI with Our RLHF Magic!',
  'Elevate AI with Our RLHF Magic!',
  'Elevate AI with Our RLHF Magic!',
  'Elevate AI with Our RLHF Magic!',
  'Elevate AI with Our RLHF Magic!',
];

export default function SignIn() {
  const swiperRef = React.useRef<SwiperRef>(null);
  const [openModal, setOpenModal] = React.useState<string | undefined>();
  const props = { openModal, setOpenModal };

  const { isConnected } = useAccount();
  const { status } = useSession();
  const router = useRouter();
  const { open } = useWeb3Modal();
  const { isLogin: isLoginPolygonId, setIsLogin: setIsLoginPolygonId } =
    usePolygonIdLoginStore();

  const [pageState, setPageState] = React.useState<string>('init');
  const { setIsLogin } = usePolygonIdLoginStore();

  useEffect(() => {
    if (status === 'authenticated' || isConnected || isLoginPolygonId) {
      router.push('/dashboard');
      // router.push('/settings/polygon-id');
    }
  }, [status, isConnected, router, isLoginPolygonId]);
  console.log('pageState', pageState);

  if (pageState == 'verifying') {
    return (
      <div className='fixed bottom-0 left-0 right-0 top-0 z-10 bg-slate-800'>
        <div className=' absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2'>
          <Spinner className='mx-auto my-auto' aria-label='loading' size='xl' />
        </div>
      </div>
    );
  }

  return (
    <>
      <Modal
        size='sm'
        show
        className={clsx({ hidden: props.openModal !== 'sign-in' })}
        onClose={() => props.setOpenModal(undefined)}
      >
        <Modal.Header>Sign in to your account</Modal.Header>
        <Modal.Body>
          <div className='space-y-4 md:space-y-6'>
            <Link
              className='bg-primary-600 hover:bg-primary-700 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800 block w-full rounded-lg px-5 py-2.5 text-center text-sm font-medium text-white focus:outline-none focus:ring-4'
              href='/api/auth/signin'
              onClick={(e) => {
                e.preventDefault();
                signIn('worldcoin'); // when worldcoin is the only provider
                // signIn() // when there are multiple providers
              }}
            >
              Sign in with Worldcoin
            </Link>
            <button
              className='bg-primary-600 hover:bg-primary-700 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800 block w-full rounded-lg px-5 py-2.5 text-center text-sm font-medium text-white focus:outline-none focus:ring-4'
              onClick={() => {
                open();
              }}
            >
              Sign in with Wallet Connect
            </button>
            <SismoConnectButton
              overrideStyle={{
                background: '#1984c7',
                width: '100%',
                fontSize: '14px',
                paddingTop: '10px',
                paddingBottom: '10px',
                height: '40px',
              }}
              config={CONFIG}
              // Auths = Data Source Ownership Requests. (e.g Wallets, Github, Twitter, Github)
              auths={AUTHS}
              // Claims = prove group membership of a Data Source in a specific Data Group.
              // (e.g ENS DAO Voter, Minter of specific NFT, etc.)
              // Data Groups = [{[dataSource1]: value1}, {[dataSource1]: value1}, .. {[dataSource]: value}]
              // Existing Data Groups and how to create one: https://factory.sismo.io/groups-explorer
              claims={CLAIMS}
              // Signature = user can sign a message embedded in their zk proof
              signature={SIGNATURE_REQUEST}
              // text='Prove With Sismo'
              text='Sign in with Sismo'
              // Triggered when received Sismo Connect response from user data vault
              onResponse={async (response: SismoConnectResponse) => {
                setPageState('verifying');
                const verifiedResult = await fetch('/api/verify', {
                  method: 'POST',
                  body: JSON.stringify(response),
                });
                if (verifiedResult.ok) {
                  setPageState('verified');
                  setIsLogin(true);
                } else {
                  setPageState('error');
                }
              }}
            />
            <PolygonIDVerifier
              publicServerURL={
                process.env.NEXT_PUBLIC_VERIFICATION_SERVER_PUBLIC_URL
              }
              localServerURL={
                process.env.NEXT_PUBLIC_VERIFICATION_SERVER_LOCAL_HOST_URL
              }
              credentialType='KYCAgeCredential'
              issuerOrHowToLink='https://oceans404.notion.site/How-to-get-a-Verifiable-Credential-f3d34e7c98ec4147b6b2fae79066c4f6?pvs=4'
              onVerificationResult={() => {
                // eslint-disable-next-line no-console
                console.log('Verification result');
                setIsLoginPolygonId(true);
              }}
            />
          </div>
        </Modal.Body>
      </Modal>
      <div className='flex min-h-screen flex-col overflow-hidden bg-neutral-900 pl-5'>
        <div className='z-10 mt-40 w-full max-w-[1314px] self-center max-md:mt-10 max-md:max-w-full'>
          <div className='flex gap-5 max-md:flex-col max-md:items-stretch max-md:gap-0'>
            <div className='flex w-[48%] flex-col items-stretch max-md:ml-0 max-md:w-full'>
              <div className='border-l border-white/60 max-md:mt-10 max-md:max-w-full'>
                <div className='flex gap-5 max-md:flex-col max-md:items-stretch max-md:gap-0'>
                  <div className='flex w-[5%] flex-col items-stretch max-md:ml-0 max-md:w-full'>
                    <div className='flex grow flex-col max-md:mt-10'>
                      <img
                        loading='lazy'
                        srcSet='https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&width=100 100w, https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&width=200 200w, https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&width=400 400w, https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&width=800 800w, https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&width=1200 1200w, https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&width=1600 1600w, https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&width=2000 2000w, https://cdn.builder.io/api/v1/image/assets/TEMP/6c20090c-4f15-4904-b3d1-fabce2901fcc?apiKey=baf7a5ccfdd6462980e433830729f984&'
                        className='aspect-[0.26] w-full self-stretch overflow-hidden object-cover object-center'
                      />
                    </div>
                  </div>
                  <div className='ml-5 flex w-[95%] flex-col items-stretch max-md:ml-0 max-md:w-full'>
                    <div className='flex grow flex-col max-md:mt-10 max-md:max-w-full'>
                      <div className='text-9xl font-semibold leading-[100%] text-white max-md:max-w-full max-md:text-4xl'>
                        AI <br />
                        SAMURAI
                      </div>
                      <div className='w-[600px]'>
                        <Swiper
                          ref={swiperRef}
                          modules={[Pagination, Autoplay]}
                          autoplay
                          spaceBetween={50}
                          slidesPerView={1}
                        >
                          {swiperContents.map((content) => (
                            <SwiperSlide className='mb-10' key={content}>
                              <p className=' mt-11 text-2xl leading-[100%] tracking-normal text-white max-md:mt-10'>
                                {content}
                              </p>
                            </SwiperSlide>
                          ))}
                        </Swiper>
                      </div>
                      {/* <div className='mt-11 text-2xl leading-[100%] tracking-normal text-white max-md:mt-10'>
                      Elevate AI with Our RLHF Magic!
                    </div> */}
                      <div
                        className='mt-10 flex w-[214px] max-w-full cursor-pointer flex-col items-center justify-center rounded-[100px] bg-blue-400 px-5 py-4 max-md:mt-10'
                        onClick={() => props.setOpenModal('sign-in')}
                      >
                        <div className='self-center text-base font-semibold leading-[150%] tracking-wide text-black'>
                          SIGN IN NOW
                        </div>
                      </div>
                      <div className='mt-14 flex gap-3'>
                        <svg
                          width={42}
                          height={42}
                          viewBox='0 0 42 42'
                          fill='none'
                          xmlns='http://www.w3.org/2000/svg'
                          className='h-[42px] w-[42px] cursor-pointer'
                          preserveAspectRatio='none'
                          onClick={() => swiperRef.current?.swiper.slidePrev()}
                        >
                          <circle
                            cx={21}
                            cy={21}
                            r={20}
                            stroke='white'
                            stroke-opacity='0.6'
                            stroke-width={2}
                          />
                          <path
                            d='M22.7317 15L16 21.1463L22.7317 27'
                            stroke='white'
                            stroke-opacity='0.87'
                            stroke-width={2}
                            stroke-linecap='round'
                          />
                        </svg>
                        <svg
                          width={42}
                          height={42}
                          viewBox='0 0 42 42'
                          fill='none'
                          xmlns='http://www.w3.org/2000/svg'
                          className='h-[42px] w-[42px] cursor-pointer'
                          preserveAspectRatio='none'
                          onClick={() => swiperRef.current?.swiper.slideNext()}
                        >
                          <circle
                            cx={21}
                            cy={21}
                            r={20}
                            transform='matrix(-1 0 0 1 42 0)'
                            stroke='white'
                            stroke-opacity='0.6'
                            stroke-width={2}
                          />
                          <path
                            d='M18.0007 15L24.7324 21.1463L18.0007 27'
                            stroke='white'
                            stroke-opacity='0.87'
                            stroke-width={2}
                            stroke-linecap='round'
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div className='absolute -right-10 bottom-0'>
          <img
            src='https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&width=100 100w, https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&width=200 200w, https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&width=400 400w, https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&width=800 800w, https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&width=1200 1200w, https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&width=1600 1600w, https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&width=2000 2000w, https://cdn.builder.io/api/v1/image/assets/TEMP/4b87fddf-8758-4c27-ad81-26edfff9e114?apiKey=baf7a5ccfdd6462980e433830729f984&'
            className='w-[100%] max-w-full'
          />
        </div>
      </div>
    </>
  );
}
